CREATE DATABASE cdp;
USE cdp;

-- For storing type data and statuses
CREATE TABLE ENUMERATION (
    ENUM_ID VARCHAR(20) PRIMARY KEY,
    PARENT_ENUM_ID VARCHAR(20),
    DESCRIPTION VARCHAR(100),
    FOREIGN KEY (PARENT_ENUM_ID) REFERENCES ENUMERATION(ENUM_ID)
);

CREATE TABLE ROLE_TYPE (
    ROLE_TYPE_ID VARCHAR(20) PRIMARY KEY,
    DESCRIPTION VARCHAR(100)
);

CREATE TABLE PARTY (
    PARTY_ID VARCHAR(20) PRIMARY KEY,
    PARTY_TYPE_ID VARCHAR(20),       
    EXTERNAL_ID VARCHAR(20) UNIQUE,  
    STATUS_ID VARCHAR(20),          
    CREATED_DATE DATETIME,
    LAST_UPDATED_DATE DATETIME,
    FOREIGN KEY (PARTY_TYPE_ID) REFERENCES ENUMERATION(ENUM_ID),
    FOREIGN KEY (STATUS_ID) REFERENCES ENUMERATION(ENUM_ID)
);

CREATE TABLE PARTY_ROLE (
    PARTY_ID VARCHAR(20),
    ROLE_TYPE_ID VARCHAR(20),
    PRIMARY KEY (PARTY_ID, ROLE_TYPE_ID),
    FOREIGN KEY (PARTY_ID) REFERENCES PARTY(PARTY_ID),
    FOREIGN KEY (ROLE_TYPE_ID) REFERENCES ROLE_TYPE(ROLE_TYPE_ID)
);

CREATE TABLE PERSON (
    PARTY_ID VARCHAR(20) PRIMARY KEY,
    FIRST_NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100),
    BIRTH_DATE DATE,
    GENDER VARCHAR(20),  
    FOREIGN KEY (PARTY_ID) REFERENCES PARTY(PARTY_ID),
    FOREIGN KEY (GENDER) REFERENCES ENUMERATION(ENUM_ID)
);

CREATE TABLE CONTACT_MECH (
    CONTACT_MECH_ID VARCHAR(20) PRIMARY KEY,
    CONTACT_MECH_TYPE_ID VARCHAR(20),  
    INFO_STRING VARCHAR(100),
    FOREIGN KEY (CONTACT_MECH_TYPE_ID) REFERENCES ENUMERATION(ENUM_ID)
);


CREATE TABLE PARTY_CONTACT_MECH (
    PARTY_ID VARCHAR(20),
    CONTACT_MECH_ID VARCHAR(20),
    CONTACT_MECH_PURPOSE_ID VARCHAR(20), -- purpose will be specified here only
    FROM_DATE DATE,
    THRU_DATE DATE,
    PRIMARY KEY (PARTY_ID, CONTACT_MECH_ID, CONTACT_MECH_PURPOSE_ID),
    FOREIGN KEY (PARTY_ID) REFERENCES PARTY(PARTY_ID),
    FOREIGN KEY (CONTACT_MECH_ID) REFERENCES CONTACT_MECH(CONTACT_MECH_ID),
    FOREIGN KEY (CONTACT_MECH_PURPOSE_ID) REFERENCES ENUMERATION(ENUM_ID)
);

CREATE TABLE POSTAL_ADDRESS (
    CONTACT_MECH_ID VARCHAR(20) PRIMARY KEY,
    TO_NAME VARCHAR(100),
    ADDRESS_1 VARCHAR(100),
    ADDRESS_2 VARCHAR(100),
    CITY VARCHAR(100),
    STATE VARCHAR(100),
    COUNTRY VARCHAR(100),
    POSTAL_CODE VARCHAR(50),
    FOREIGN KEY (CONTACT_MECH_ID) REFERENCES CONTACT_MECH(CONTACT_MECH_ID)
);

CREATE TABLE TELECOM_NUMBER (
    CONTACT_MECH_ID VARCHAR(20) PRIMARY KEY,
    COUNTRY_CODE VARCHAR(10),
    AREA_CODE VARCHAR(10),
    NUMBER VARCHAR(20),
    FOREIGN KEY (CONTACT_MECH_ID) REFERENCES CONTACT_MECH(CONTACT_MECH_ID)
);

-- For storing additional detials like: accepts_marketing, marketing_opt_in_level
CREATE TABLE PARTY_ATTRIBUTE (
    PARTY_ID VARCHAR(20),
    ATTR_NAME VARCHAR(50),
    ATTR_VALUE VARCHAR(100),
    PRIMARY KEY (PARTY_ID, ATTR_NAME),
    FOREIGN KEY (PARTY_ID) REFERENCES PARTY(PARTY_ID)
);

-- For categorizing customers with market opt-ins i.e. email_marketing_consent, sms_marketing_consent
CREATE TABLE PARTY_CLASSIFICATION (
PARTY_CLASSIFICATION_ID VARCHAR(20) PRIMARY KEY,
PARTY_CLASSIFICATION_TYPE_ID VARCHAR(20),
DESCRIPTION VARCHAR(100),
FOREIGN KEY (PARTY_CLASSIFICATION_TYPE_ID) REFERENCES ENUMERATION(ENUM_ID)
);

-- For linking party to the classification
CREATE TABLE PARTY_CLASSIFICATION_APPL (
    PARTY_ID VARCHAR(20),
    PARTY_CLASSIFICATION_ID VARCHAR(20),
    FROM_DATE DATE,
    THRU_DATE DATE,
    PRIMARY KEY (PARTY_ID, PARTY_CLASSIFICATION_ID, FROM_DATE),
    FOREIGN KEY (PARTY_ID) REFERENCES PARTY(PARTY_ID),
    FOREIGN KEY (PARTY_CLASSIFICATION_ID) REFERENCES PARTY_CLASSIFICATION(PARTY_CLASSIFICATION_ID)
);